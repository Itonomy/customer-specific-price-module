<?php


namespace Itonomy\CustomerPrice\Model\ResourceModel\Price;

use Itonomy\CustomerPrice\Model\CustomerPrice;

class Collection extends \Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection
{
    protected $_idFieldName = 'entity_id';
    protected $_eventPrefix = 'itonomy_customerprice_price_collection';
    protected $_eventObject = 'price_collection';

    /**
     * Define resource model
     *
     * @return void
     */
    protected function _construct()
    {
        $this->_init('Itonomy\CustomerPrice\Model\CustomerPrice', 'Itonomy\CustomerPrice\Model\ResourceModel\Price');
    }

    /**
     * @return CustomerPrice[]
     */
    public function getItems()
    {
        return parent::getItems(); // TODO: Change the autogenerated stub
    }

    /**
     * @param int $productId
     * @param int $customerId
     * @param int $websiteId
     * @return CustomerPrice|null
     */
    public function getCustomerProductPrice(int $productId,int $customerId,int $websiteId = 0){

        $this->addFieldToFilter('product_id',$productId);
        $this->addFieldToFilter('customer_id',$customerId);
        $this->addFieldToFilter('website_id', ['in' => [$websiteId,0]]);
        $items = $this->getItems();

        if(count($items)===0){
            return null;
        } elseif(count($items)===1){
            return array_pop($items);
        } else {
            foreach ($items as $object) {
                if($object->getWebsiteId() == $websiteId) {
                    return $object;
                }
            }
            return $object;
        }
    }
}
